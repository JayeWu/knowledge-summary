SOA:面向服务的架构，把整个架构，打散，形成不同的单元，每个单元成为服务。通过系统
拆分，降低复杂度。平台无关，接口调用。
微服务：概念比SOA小，比SOA拆分的更细。

使用现代化的DevOps工具，如Chef、Docker、Ansible、Packer、Troposphere、Consul、Jenkins、SonarQube、AWS等

服务拆分：
服务注册：服务之间如何通信。
服务发现：
服务消费：调用服务
统一入口：
配置管理：怎么管理配置
熔断机制：挡住所有请求，但服务发生故障的时候，返回提示信息
自动扩展：


服务发现的意义：
1) 通过URI来访问服务
	http://localhost:8080/weather//cityName/{cityName}
	弊端：绑定主机，难记，很难做到负载均衡。
2）服务注册于发现
服务注册：
服务发现：

使用Eureka
1）服务注册和发现机制
2）和springcloud无缝集成
3）高可用性
4）开源







